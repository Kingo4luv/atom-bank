var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.116,1,1.646]],["body/controllers/AppController.html",[0,1.703,1,2.512,2,1.33,3,0.515,4,0.433,5,0.433,6,2.688,7,0.515,8,1.703,9,4.004,10,1.33,11,0.048,12,0.802,13,3.32,14,1.33,15,1.329,16,0.66,17,0.802,18,2.129,19,2.688,20,0.515,21,0.087,22,3.32,23,3.32,24,1.33,25,3.32,26,0.028,27,0.036,28,0.028]],["title/modules/AppModule.html",[29,1.116,30,1.646]],["body/modules/AppModule.html",[1,2.18,2,1.245,3,0.327,4,0.275,5,0.275,11,0.048,16,0.788,17,0.509,18,2.062,19,1.707,20,0.327,21,0.055,26,0.018,27,0.027,28,0.018,29,1.479,30,3.093,31,0.957,32,0.957,33,1.245,34,1.245,35,0.957,36,2.18,37,1.245,38,1.707,39,1.707,40,1.707,41,2.345,42,2.062,43,1.82,44,1.609,45,1.836,46,1.245,47,1.245,48,2.107,49,1.905,50,1.905,51,2.127,52,2.107,53,1.707,54,1.443,55,0.957,56,2.107,57,2.107,58,2.107,59,2.107,60,2.107,61,2.107,62,1.707,63,2.107,64,2.107,65,2.107,66,2.107,67,2.107,68,2.107,69,2.107,70,2.107,71,2.107,72,2.107,73,2.107,74,2.107,75,2.107,76,2.107,77,2.107,78,2.516,79,2.107]],["title/injectables/AppService.html",[18,1.264,80,0.871]],["body/injectables/AppService.html",[3,0.547,4,0.459,5,0.459,7,0.547,8,1.768,9,4.091,11,0.047,12,0.85,14,1.411,15,1.38,16,0.547,17,0.85,18,2.003,20,0.547,21,0.093,24,1.411,26,0.03,27,0.038,28,0.03,80,1.38,81,1.817,82,2.851,83,3.521,84,3.521,85,3.521]],["title/classes/Balance.html",[21,0.073,86,1.116]],["body/classes/Balance.html",[3,0.485,4,0.408,5,0.408,7,0.485,10,1.638,11,0.046,12,0.988,15,1.278,16,0.485,20,0.485,21,0.082,26,0.027,27,0.035,28,0.027,86,2.01,87,1.613,88,2.531,89,3.311,90,3.689,91,2.416,92,1.826,93,1.278,94,3.126,95,3.126,96,2.416,97,3.913,98,3.126,99,2.798,100,2.531,101,2.531,102,2.531,103,3.126,104,1.419,105,1.847,106,3.126]],["title/controllers/BalanceController.html",[0,1.116,49,1.437]],["body/controllers/BalanceController.html",[0,0.504,2,0.504,3,0.195,4,0.164,5,0.164,7,0.195,8,0.832,10,1.231,11,0.048,12,0.742,14,1.231,15,0.828,16,0.65,17,0.304,20,0.195,21,0.033,24,1.061,26,0.011,27,0.018,28,0.011,43,1.061,44,0.938,49,1.071,62,1.019,78,1.68,86,1.465,92,1.678,93,0.96,104,1.394,107,1.019,108,1.019,109,2.614,110,2.326,111,2.075,112,2.751,113,1.019,114,2.144,115,2.447,116,1.259,117,1.259,118,1.565,119,1.259,120,1.754,121,1.259,122,1.259,123,3.071,124,1.996,125,2.075,126,1.259,127,1.565,128,1.565,129,1.565,130,2.144,131,1.259,132,1.259,133,2.075,134,2.075,135,3.071,136,1.68,137,1.259,138,1.259,139,2.285,140,1.259,141,1.259,142,2.075,143,1.259,144,2.075,145,2.075,146,1.259,147,2.075,148,1.68,149,1.68,150,1.259,151,1.019,152,1.259,153,0.861,154,1.019,155,1.259,156,1.019,157,1.259,158,1.259,159,1.42,160,1.259,161,1.019,162,1.019,163,0.861,164,1.259,165,2.075,166,3.273,167,0.65,168,1.259,169,0.744,170,1.565,171,1.259,172,3.132,173,1.259,174,1.259,175,1.259,176,1.259,177,1.259,178,1.259,179,2.487,180,1.019,181,2.075,182,2.075,183,2.102,184,2.075,185,1.259,186,1.259,187,1.259,188,2.075,189,2.487,190,1.259,191,1.259,192,1.019,193,1.259,194,1.061,195,1.019,196,1.259,197,2.648,198,2.075,199,2.075,200,2.075,201,2.075,202,2.075,203,1.259,204,1.019,205,1.259,206,1.259,207,1.259,208,1.259,209,1.259]],["title/classes/BalanceDto.html",[21,0.073,120,1.437]],["body/classes/BalanceDto.html",[3,0.434,4,0.365,5,0.365,7,0.434,10,1.522,11,0.047,12,0.917,15,1.446,16,0.589,20,0.434,21,0.1,26,0.024,27,0.033,28,0.024,86,1.937,87,1.444,91,2.244,92,1.937,93,1.446,96,2.732,115,2.387,120,1.96,124,1.96,167,1.444,210,3.491,211,2.266,212,2.266,213,2.798,214,2.266,215,2.798,216,3.491,217,3.491,218,2.266,219,2.266,220,3.075,221,2.266,222,2.266,223,1.915,224,2.266,225,2.266]],["title/modules/BalanceModule.html",[29,1.116,41,1.437]],["body/modules/BalanceModule.html",[2,1.508,3,0.429,4,0.36,5,0.36,11,0.048,16,0.771,17,0.667,20,0.429,21,0.073,26,0.024,27,0.032,28,0.024,29,1.716,31,1.254,32,1.254,33,1.632,34,1.632,35,1.254,36,2.53,37,2.224,41,2.67,42,2.254,43,1.99,45,2.224,46,1.632,47,1.632,49,2.21,51,2.576,54,2.576,55,1.254,86,1.107,162,2.236,163,1.89,226,2.762,227,2.762,228,2.762,229,2.762,230,2.762,231,2.762,232,2.762]],["title/injectables/BalanceService.html",[43,1.116,80,0.871]],["body/injectables/BalanceService.html",[3,0.335,4,0.281,5,0.281,7,0.335,8,1.266,11,0.048,12,0.995,14,1.499,15,1.17,16,0.68,17,0.521,20,0.335,21,0.057,24,1.499,26,0.018,27,0.027,28,0.018,43,1.266,55,0.979,80,0.988,81,1.114,86,1.65,92,1.266,93,0.988,104,2.203,109,2.926,110,2.56,118,2.707,120,1.114,124,1.114,127,2.21,128,2.21,129,2.21,136,1.747,151,1.747,153,1.477,154,1.747,161,1.747,163,1.477,169,1.868,170,1.868,179,1.747,183,1.477,189,1.747,233,1.747,234,3.335,235,2.559,236,2.157,237,2.157,238,3.16,239,2.559,240,2.157,241,1.747,242,2.157,243,2.559,244,2.157,245,1.747,246,2.157,247,1.747,248,2.157,249,2.157,250,2.157,251,2.157,252,2.157]],["title/injectables/TimeoutInterceptor.html",[80,0.871,253,1.906]],["body/injectables/TimeoutInterceptor.html",[3,0.431,4,0.362,5,0.362,7,0.431,8,1.513,11,0.048,12,0.67,14,1.111,16,0.666,17,0.67,20,0.431,21,0.073,24,1.72,26,0.024,27,0.032,28,0.024,80,1.18,81,1.432,93,0.867,127,1.639,128,1.639,129,1.639,253,2.584,254,2.246,255,3.775,256,3.775,257,4.607,258,4.292,259,4.607,260,2.774,261,2.774,262,4.292,263,3.775,264,3.775,265,2.774,266,3.775,267,2.246,268,2.774,269,2.774,270,2.774,271,2.774,272,2.774,273,2.774,274,2.774,275,2.774,276,2.774,277,2.774,278,2.774]],["title/classes/Transaction.html",[21,0.073,194,1.116]],["body/classes/Transaction.html",[3,0.429,4,0.36,5,0.36,7,0.429,10,1.843,11,0.047,12,1.111,15,1.438,16,0.429,20,0.429,21,0.073,26,0.024,27,0.032,28,0.024,87,1.426,89,3.048,90,3.468,91,2.224,92,1.716,93,1.438,96,2.717,97,4.115,99,2.576,100,3.048,101,3.048,102,3.048,104,1.254,105,1.632,180,3.468,194,1.508,279,2.236,280,3.468,281,4.282,282,2.762,283,2.762,284,2.762,285,2.762,286,2.762,287,2.762]],["title/controllers/TransactionController.html",[0,1.116,50,1.437]],["body/controllers/TransactionController.html",[0,1.178,2,1.178,3,0.456,4,0.383,5,0.383,7,0.456,8,1.573,10,1.178,11,0.048,12,0.71,14,1.178,16,0.732,17,0.71,20,0.456,21,0.077,24,1.178,26,0.025,27,0.034,28,0.025,44,1.565,50,2.026,108,2.38,109,2.612,113,2.38,114,3.179,115,2.026,118,2.32,130,2.38,156,2.38,166,3.179,167,1.517,169,1.737,170,1.737,172,2.38,194,1.178,288,2.38,289,4.42,290,2.939,291,2.012,292,2.38,293,2.939,294,2.939]],["title/modules/TransactionModule.html",[29,1.116,42,1.264]],["body/modules/TransactionModule.html",[2,1.531,3,0.438,4,0.368,5,0.368,11,0.047,16,0.753,17,0.682,20,0.438,21,0.074,26,0.024,27,0.033,28,0.024,29,1.735,31,1.281,32,1.281,33,1.668,34,1.668,35,1.281,36,2.559,37,2.559,42,2.32,44,1.917,45,2.257,46,1.668,47,1.668,50,2.235,51,1.932,54,2.615,55,1.281,194,1.131,291,1.932,292,2.286,295,2.286,296,2.823,297,2.286,298,2.823,299,2.823,300,2.823]],["title/injectables/TransactionService.html",[44,0.986,80,0.871]],["body/injectables/TransactionService.html",[3,0.309,4,0.259,5,0.259,7,0.309,8,1.193,11,0.048,12,1.024,14,1.586,15,1.391,16,0.615,17,0.481,20,0.309,21,0.052,24,1.586,26,0.017,27,0.025,28,0.017,44,1.054,55,0.903,80,0.931,81,1.027,92,1.586,93,0.931,104,0.903,109,2.999,110,2.038,118,2.802,124,1.537,127,2.339,128,2.339,129,2.339,149,2.411,153,1.362,169,1.759,170,1.176,183,1.362,192,1.611,194,1.193,195,1.611,234,3.206,235,2.411,239,2.411,241,1.611,243,2.411,245,1.611,247,1.611,291,1.362,301,1.611,302,2.977,303,1.99,304,1.99,305,2.977,306,1.99,307,1.99,308,2.977,309,1.99,310,1.99,311,1.99,312,1.99,313,1.99,314,2.977,315,2.977,316,1.99,317,1.99,318,1.99,319,1.99,320,1.99,321,1.99,322,1.99,323,1.99]],["title/classes/TransferDto.html",[21,0.073,139,1.646]],["body/classes/TransferDto.html",[3,0.406,4,0.341,5,0.341,7,0.406,10,1.668,11,0.047,12,1.005,15,1.596,16,0.563,20,0.406,21,0.095,26,0.022,27,0.031,28,0.022,87,1.35,91,2.142,92,1.801,93,1.476,96,2.655,112,2.936,115,2.436,139,2.142,167,1.35,204,2.118,212,2.936,214,2.118,216,3.37,217,3.639,218,2.118,219,2.118,220,2.936,221,2.118,222,2.118,223,1.79,224,2.936,225,2.936,280,3.822,324,2.118,325,2.615,326,3.625,327,2.615,328,2.615,329,2.615,330,2.615]],["title/coverage.html",[331,2.591]],["body/coverage.html",[0,1.704,1,1.611,5,0.356,6,2.208,11,0.047,18,1.238,21,0.12,26,0.023,27,0.032,28,0.023,35,1.238,43,1.092,44,0.965,49,1.407,50,1.407,80,1.43,82,2.208,86,1.092,88,2.208,93,0.853,99,1.866,107,2.208,120,1.407,124,1.407,139,1.611,159,1.866,194,1.092,210,2.208,211,2.208,233,2.208,253,1.866,254,2.208,279,2.208,288,2.208,301,2.208,324,2.208,331,1.866,332,2.726,333,2.726,334,2.726,335,4.39,336,4.574,337,4.254,338,3.731,339,2.726,340,2.208,341,2.726,342,3.731,343,2.208,344,2.726,345,2.726,346,2.726]],["title/dependencies.html",[32,1.519,347,2.333]],["body/dependencies.html",[11,0.048,17,0.774,21,0.109,26,0.027,27,0.036,28,0.027,32,1.454,53,2.594,55,1.454,104,1.886,105,1.893,167,1.654,223,2.193,267,2.594,348,4.611,349,3.204,350,3.204,351,3.204,352,4.155,353,3.204,354,3.204,355,3.204,356,3.204,357,3.204,358,3.204,359,3.204,360,3.204,361,3.204,362,3.204,363,3.204,364,3.204,365,3.204,366,3.204,367,3.204,368,3.204,369,3.204,370,3.204]],["title/miscellaneous/functions.html",[371,1.379,372,2.709]],["body/miscellaneous/functions.html",[7,0.642,11,0.042,26,0.035,27,0.042,28,0.035,35,2.347,343,3.348,371,2.443,372,3.348,373,4.134]],["title/index.html",[7,0.362,374,2.333,375,2.333]],["body/index.html",[4,0.35,11,0.047,26,0.023,27,0.032,28,0.023,105,1.584,115,1.384,148,2.171,331,1.835,376,2.681,377,2.681,378,3.688,379,2.681,380,2.681,381,2.681,382,2.681,383,2.681,384,4.216,385,2.681,386,2.681,387,2.681,388,5.041,389,2.681,390,2.681,391,2.681,392,4.921,393,2.681,394,2.681,395,3.688,396,2.681,397,2.681,398,2.681,399,2.681,400,3.688,401,3.688,402,2.681,403,2.681,404,2.681,405,3.688,406,3.688,407,2.681,408,2.681,409,2.681,410,2.681,411,2.681,412,2.171,413,2.681,414,2.681,415,2.681,416,2.681,417,2.681,418,2.681,419,2.681,420,2.681,421,2.681,422,2.681,423,2.681,424,2.681,425,2.681,426,2.681,427,2.681,428,2.681,429,2.681,430,2.681]],["title/modules.html",[31,1.718]],["body/modules.html",[11,0.04,26,0.034,27,0.04,28,0.034,30,2.323,31,1.785,41,2.029,42,1.785,412,4.098,431,5.06,432,5.06,433,5.06]],["title/overview.html",[434,3.065]],["body/overview.html",[2,1.156,11,0.046,18,1.988,26,0.025,27,0.033,28,0.025,29,1.156,30,3.211,31,1.31,32,1.31,33,1.705,34,1.705,35,1.31,36,1.705,37,1.705,38,2.337,39,2.337,40,2.337,41,2.653,42,2.333,43,1.876,44,1.85,45,2.292,46,1.705,47,1.705,81,1.49,87,1.49,295,2.337,297,2.337,434,2.337,435,3.878,436,3.878]],["title/miscellaneous/variables.html",[371,1.379,437,2.709]],["body/miscellaneous/variables.html",[7,0.585,11,0.048,26,0.032,27,0.039,28,0.032,159,3.15,335,3.052,340,3.052,371,2.227,437,3.052,438,3.769,439,3.769,440,3.769,441,3.769,442,3.769,443,3.769,444,3.769,445,3.769]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Balance.html":{},"controllers/BalanceController.html":{},"classes/BalanceDto.html":{},"modules/BalanceModule.html":{},"injectables/BalanceService.html":{},"injectables/TimeoutInterceptor.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/TransferDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":335,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":362,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":357,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":353,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":356,"title":{},"body":{"dependencies.html":{}}}],["0.6.3",{"_index":349,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":342,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":336,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":338,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":339,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":337,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":345,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1000",{"_index":318,"title":{},"body":{"injectables/TransactionService.html":{}}}],["2.1.0",{"_index":367,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":114,"title":{},"body":{"controllers/BalanceController.html":{},"controllers/TransactionController.html":{}}}],["201",{"_index":123,"title":{},"body":{"controllers/BalanceController.html":{}}}],["3",{"_index":435,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":364,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":192,"title":{},"body":{"controllers/BalanceController.html":{},"injectables/TransactionService.html":{}}}],["4",{"_index":436,"title":{},"body":{"overview.html":{}}}],["4.1.6",{"_index":370,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":354,"title":{},"body":{"dependencies.html":{}}}],["403",{"_index":144,"title":{},"body":{"controllers/BalanceController.html":{}}}],["404",{"_index":135,"title":{},"body":{"controllers/BalanceController.html":{}}}],["500",{"_index":147,"title":{},"body":{"controllers/BalanceController.html":{}}}],["5433",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["6.6.2",{"_index":366,"title":{},"body":{"dependencies.html":{}}}],["6.6.6",{"_index":365,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":348,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":359,"title":{},"body":{"dependencies.html":{}}}],["abcdefghijklmnopqrstupwxyz0123456789'.split",{"_index":444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["account",{"_index":92,"title":{},"body":{"classes/Balance.html":{},"controllers/BalanceController.html":{},"classes/BalanceDto.html":{},"injectables/BalanceService.html":{},"classes/Transaction.html":{},"injectables/TransactionService.html":{},"classes/TransferDto.html":{}}}],["account'})@apiresponse({status",{"_index":143,"title":{},"body":{"controllers/BalanceController.html":{}}}],["account/balance",{"_index":125,"title":{},"body":{"controllers/BalanceController.html":{}}}],["alpha",{"_index":443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amazing",{"_index":413,"title":{},"body":{"index.html":{}}}],["amount",{"_index":280,"title":{},"body":{"classes/Transaction.html":{},"classes/TransferDto.html":{}}}],["apibody",{"_index":165,"title":{},"body":{"controllers/BalanceController.html":{}}}],["apibody({type",{"_index":176,"title":{},"body":{"controllers/BalanceController.html":{}}}],["apiproperty",{"_index":216,"title":{},"body":{"classes/BalanceDto.html":{},"classes/TransferDto.html":{}}}],["apiproperty({type",{"_index":329,"title":{},"body":{"classes/TransferDto.html":{}}}],["apiresponse",{"_index":166,"title":{},"body":{"controllers/BalanceController.html":{},"controllers/TransactionController.html":{}}}],["app",{"_index":390,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":383,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":109,"title":{},"body":{"controllers/BalanceController.html":{},"injectables/BalanceService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["author",{"_index":423,"title":{},"body":{"index.html":{}}}],["autoincrement",{"_index":100,"title":{},"body":{"classes/Balance.html":{},"classes/Transaction.html":{}}}],["autoloadmodels",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":189,"title":{},"body":{"controllers/BalanceController.html":{},"injectables/BalanceService.html":{}}}],["backers",{"_index":414,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":151,"title":{},"body":{"controllers/BalanceController.html":{},"injectables/BalanceService.html":{}}}],["badrequestexception(\"you",{"_index":184,"title":{},"body":{"controllers/BalanceController.html":{}}}],["balance",{"_index":86,"title":{"classes/Balance.html":{}},"body":{"classes/Balance.html":{},"controllers/BalanceController.html":{},"classes/BalanceDto.html":{},"modules/BalanceModule.html":{},"injectables/BalanceService.html":{},"coverage.html":{}}}],["balance'})@apiresponse({status",{"_index":134,"title":{},"body":{"controllers/BalanceController.html":{}}}],["balance.controller",{"_index":231,"title":{},"body":{"modules/BalanceModule.html":{}}}],["balance.dto",{"_index":161,"title":{},"body":{"controllers/BalanceController.html":{},"injectables/BalanceService.html":{}}}],["balance.dto.ts",{"_index":211,"title":{},"body":{"classes/BalanceDto.html":{},"coverage.html":{}}}],["balance.dto.ts:13",{"_index":215,"title":{},"body":{"classes/BalanceDto.html":{}}}],["balance.dto.ts:8",{"_index":213,"title":{},"body":{"classes/BalanceDto.html":{}}}],["balance.findone",{"_index":199,"title":{},"body":{"controllers/BalanceController.html":{}}}],["balance.service",{"_index":162,"title":{},"body":{"controllers/BalanceController.html":{},"modules/BalanceModule.html":{}}}],["balance/balance.controller",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["balance/balance.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["balance/balance.service",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["balancecontroller",{"_index":49,"title":{"controllers/BalanceController.html":{}},"body":{"modules/AppModule.html":{},"controllers/BalanceController.html":{},"modules/BalanceModule.html":{},"coverage.html":{}}}],["balancedto",{"_index":120,"title":{"classes/BalanceDto.html":{}},"body":{"controllers/BalanceController.html":{},"classes/BalanceDto.html":{},"injectables/BalanceService.html":{},"coverage.html":{}}}],["balancedto})@apiresponse({status",{"_index":122,"title":{},"body":{"controllers/BalanceController.html":{}}}],["balancemodel",{"_index":238,"title":{},"body":{"injectables/BalanceService.html":{}}}],["balancemodule",{"_index":41,"title":{"modules/BalanceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BalanceModule.html":{},"modules.html":{},"overview.html":{}}}],["balances",{"_index":116,"title":{},"body":{"controllers/BalanceController.html":{}}}],["balanceservice",{"_index":43,"title":{"injectables/BalanceService.html":{}},"body":{"modules/AppModule.html":{},"controllers/BalanceController.html":{},"modules/BalanceModule.html":{},"injectables/BalanceService.html":{},"coverage.html":{},"overview.html":{}}}],["body",{"_index":130,"title":{},"body":{"controllers/BalanceController.html":{},"controllers/TransactionController.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/BalanceModule.html":{},"modules/TransactionModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":433,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":431,"title":{},"body":{"modules.html":{}}}],["building",{"_index":379,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":259,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["can't",{"_index":185,"title":{},"body":{"controllers/BalanceController.html":{}}}],["catch",{"_index":321,"title":{},"body":{"injectables/TransactionService.html":{}}}],["catcherror",{"_index":268,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catcherror(err",{"_index":274,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["class",{"_index":21,"title":{"classes/Balance.html":{},"classes/BalanceDto.html":{},"classes/Transaction.html":{},"classes/TransferDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Balance.html":{},"controllers/BalanceController.html":{},"classes/BalanceDto.html":{},"modules/BalanceModule.html":{},"injectables/BalanceService.html":{},"injectables/TimeoutInterceptor.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/TransferDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":87,"title":{},"body":{"classes/Balance.html":{},"classes/BalanceDto.html":{},"classes/Transaction.html":{},"classes/TransferDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_balancemodule",{"_index":226,"title":{},"body":{"modules/BalanceModule.html":{}}}],["cluster_balancemodule_imports",{"_index":227,"title":{},"body":{"modules/BalanceModule.html":{}}}],["cluster_balancemodule_providers",{"_index":228,"title":{},"body":{"modules/BalanceModule.html":{}}}],["cluster_transactionmodule",{"_index":295,"title":{},"body":{"modules/TransactionModule.html":{},"overview.html":{}}}],["cluster_transactionmodule_exports",{"_index":297,"title":{},"body":{"modules/TransactionModule.html":{},"overview.html":{}}}],["cluster_transactionmodule_providers",{"_index":296,"title":{},"body":{"modules/TransactionModule.html":{}}}],["code",{"_index":445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["column",{"_index":97,"title":{},"body":{"classes/Balance.html":{},"classes/Transaction.html":{}}}],["configmodule",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":179,"title":{},"body":{"controllers/BalanceController.html":{},"injectables/BalanceService.html":{}}}],["constructor",{"_index":169,"title":{},"body":{"controllers/BalanceController.html":{},"injectables/BalanceService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["constructor(balancemodel",{"_index":236,"title":{},"body":{"injectables/BalanceService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["constructor(transactionmodel",{"_index":303,"title":{},"body":{"injectables/TransactionService.html":{}}}],["context",{"_index":261,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/BalanceController.html":{},"controllers/TransactionController.html":{}},"body":{"controllers/AppController.html":{},"controllers/BalanceController.html":{},"controllers/TransactionController.html":{},"coverage.html":{}}}],["controller('balance",{"_index":168,"title":{},"body":{"controllers/BalanceController.html":{}}}],["controller('transactions",{"_index":293,"title":{},"body":{"controllers/TransactionController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/BalanceController.html":{},"modules/BalanceModule.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"overview.html":{}}}],["coverage",{"_index":331,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":110,"title":{},"body":{"controllers/BalanceController.html":{},"injectables/BalanceService.html":{},"injectables/TransactionService.html":{}}}],["create(@body",{"_index":173,"title":{},"body":{"controllers/BalanceController.html":{}}}],["create(body",{"_index":119,"title":{},"body":{"controllers/BalanceController.html":{}}}],["create(data",{"_index":239,"title":{},"body":{"injectables/BalanceService.html":{},"injectables/TransactionService.html":{}}}],["createdat",{"_index":315,"title":{},"body":{"injectables/TransactionService.html":{}}}],["data",{"_index":241,"title":{},"body":{"injectables/BalanceService.html":{},"injectables/TransactionService.html":{}}}],["database",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["date(date.now",{"_index":317,"title":{},"body":{"injectables/TransactionService.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/BalanceModule.html":{},"modules/TransactionModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/Balance.html":{},"controllers/BalanceController.html":{},"classes/BalanceDto.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransferDto.html":{}}}],["default",{"_index":439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Balance.html":{},"controllers/BalanceController.html":{},"classes/BalanceDto.html":{},"injectables/BalanceService.html":{},"injectables/TimeoutInterceptor.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"classes/TransferDto.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/BalanceModule.html":{},"modules/TransactionModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":320,"title":{},"body":{"injectables/TransactionService.html":{}}}],["description",{"_index":115,"title":{},"body":{"controllers/BalanceController.html":{},"classes/BalanceDto.html":{},"controllers/TransactionController.html":{},"classes/TransferDto.html":{},"index.html":{}}}],["description:\"recipient",{"_index":330,"title":{},"body":{"classes/TransferDto.html":{}}}],["development",{"_index":391,"title":{},"body":{"index.html":{}}}],["dialect:\"postgres",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["documentation",{"_index":332,"title":{},"body":{"coverage.html":{}}}],["e2e",{"_index":402,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":380,"title":{},"body":{"index.html":{}}}],["err",{"_index":275,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["error",{"_index":149,"title":{},"body":{"controllers/BalanceController.html":{},"injectables/TransactionService.html":{}}}],["executioncontext",{"_index":257,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Balance.html":{},"controllers/BalanceController.html":{},"classes/BalanceDto.html":{},"modules/BalanceModule.html":{},"injectables/BalanceService.html":{},"injectables/TimeoutInterceptor.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/TransferDto.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/BalanceModule.html":{},"modules/TransactionModule.html":{},"overview.html":{}}}],["express",{"_index":352,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":89,"title":{},"body":{"classes/Balance.html":{},"classes/Transaction.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Balance.html":{},"controllers/BalanceController.html":{},"classes/BalanceDto.html":{},"modules/BalanceModule.html":{},"injectables/BalanceService.html":{},"injectables/TimeoutInterceptor.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/TransferDto.html":{},"coverage.html":{}}}],["findall",{"_index":234,"title":{},"body":{"injectables/BalanceService.html":{},"injectables/TransactionService.html":{}}}],["findlatest",{"_index":302,"title":{},"body":{"injectables/TransactionService.html":{}}}],["findlatest(account",{"_index":308,"title":{},"body":{"injectables/TransactionService.html":{}}}],["findone",{"_index":235,"title":{},"body":{"injectables/BalanceService.html":{},"injectables/TransactionService.html":{}}}],["findone(account",{"_index":243,"title":{},"body":{"injectables/BalanceService.html":{},"injectables/TransactionService.html":{}}}],["found",{"_index":136,"title":{},"body":{"controllers/BalanceController.html":{},"injectables/BalanceService.html":{}}}],["framework",{"_index":378,"title":{},"body":{"index.html":{}}}],["frombalance",{"_index":198,"title":{},"body":{"controllers/BalanceController.html":{}}}],["frombalance.balance",{"_index":205,"title":{},"body":{"controllers/BalanceController.html":{}}}],["function",{"_index":344,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":372,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fund",{"_index":177,"title":{},"body":{"controllers/BalanceController.html":{}}}],["fund'})@apiresponse({status",{"_index":146,"title":{},"body":{"controllers/BalanceController.html":{}}}],["generatereference",{"_index":159,"title":{},"body":{"controllers/BalanceController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get(':account",{"_index":207,"title":{},"body":{"controllers/BalanceController.html":{}}}],["get(':account')@apiresponse({status",{"_index":132,"title":{},"body":{"controllers/BalanceController.html":{}}}],["get()@apiresponse({status",{"_index":113,"title":{},"body":{"controllers/BalanceController.html":{},"controllers/TransactionController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":374,"title":{"index.html":{}},"body":{}}],["grow",{"_index":409,"title":{},"body":{"index.html":{}}}],["haslatesttransaction",{"_index":188,"title":{},"body":{"controllers/BalanceController.html":{}}}],["hello",{"_index":84,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":420,"title":{},"body":{"index.html":{}}}],["host",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["httpexception",{"_index":152,"title":{},"body":{"controllers/BalanceController.html":{}}}],["https://nestjs.com",{"_index":427,"title":{},"body":{"index.html":{}}}],["id",{"_index":281,"title":{},"body":{"classes/Transaction.html":{}}}],["identifier",{"_index":333,"title":{},"body":{"coverage.html":{}}}],["if(!balance",{"_index":250,"title":{},"body":{"injectables/BalanceService.html":{}}}],["implements",{"_index":271,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Balance.html":{},"controllers/BalanceController.html":{},"classes/BalanceDto.html":{},"modules/BalanceModule.html":{},"injectables/BalanceService.html":{},"injectables/TimeoutInterceptor.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/TransferDto.html":{}}}],["imports",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/BalanceModule.html":{},"modules/TransactionModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Balance.html":{},"controllers/BalanceController.html":{},"classes/BalanceDto.html":{},"injectables/BalanceService.html":{},"injectables/TimeoutInterceptor.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"classes/TransferDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Balance.html":{},"controllers/BalanceController.html":{},"classes/BalanceDto.html":{},"modules/BalanceModule.html":{},"injectables/BalanceService.html":{},"injectables/TimeoutInterceptor.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/TransferDto.html":{}}}],["injectable",{"_index":80,"title":{"injectables/AppService.html":{},"injectables/BalanceService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransactionService.html":{}},"body":{"injectables/AppService.html":{},"injectables/BalanceService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["injectables",{"_index":81,"title":{},"body":{"injectables/AppService.html":{},"injectables/BalanceService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransactionService.html":{},"overview.html":{}}}],["injectmodel",{"_index":245,"title":{},"body":{"injectables/BalanceService.html":{},"injectables/TransactionService.html":{}}}],["injectmodel(balance",{"_index":246,"title":{},"body":{"injectables/BalanceService.html":{}}}],["injectmodel(transaction",{"_index":312,"title":{},"body":{"injectables/TransactionService.html":{}}}],["installation",{"_index":387,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":389,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":276,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["insufficient",{"_index":145,"title":{},"body":{"controllers/BalanceController.html":{}}}],["intercept",{"_index":255,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["intercept(context",{"_index":256,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["internalservererrorexception",{"_index":153,"title":{},"body":{"controllers/BalanceController.html":{},"injectables/BalanceService.html":{},"injectables/TransactionService.html":{}}}],["internalservererrorexception(\"server",{"_index":322,"title":{},"body":{"injectables/TransactionService.html":{}}}],["invalid",{"_index":142,"title":{},"body":{"controllers/BalanceController.html":{}}}],["isint",{"_index":218,"title":{},"body":{"classes/BalanceDto.html":{},"classes/TransferDto.html":{}}}],["isnotempty",{"_index":217,"title":{},"body":{"classes/BalanceDto.html":{},"classes/TransferDto.html":{}}}],["isnotempty()@ispositive()@apiproperty({type",{"_index":214,"title":{},"body":{"classes/BalanceDto.html":{},"classes/TransferDto.html":{}}}],["isnotempty()@minlength(10)@maxlength(10)@apiproperty({type",{"_index":212,"title":{},"body":{"classes/BalanceDto.html":{},"classes/TransferDto.html":{}}}],["isnumber",{"_index":219,"title":{},"body":{"classes/BalanceDto.html":{},"classes/TransferDto.html":{}}}],["ispositive",{"_index":220,"title":{},"body":{"classes/BalanceDto.html":{},"classes/TransferDto.html":{}}}],["isuuid",{"_index":103,"title":{},"body":{"classes/Balance.html":{}}}],["join",{"_index":416,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":424,"title":{},"body":{"index.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/BalanceModule.html":{},"modules/TransactionModule.html":{},"overview.html":{}}}],["length",{"_index":441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["license",{"_index":430,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":406,"title":{},"body":{"index.html":{}}}],["lock",{"_index":200,"title":{},"body":{"controllers/BalanceController.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Balance.html":{},"controllers/BalanceController.html":{},"classes/BalanceDto.html":{},"modules/BalanceModule.html":{},"injectables/BalanceService.html":{},"injectables/TimeoutInterceptor.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/TransferDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":221,"title":{},"body":{"classes/BalanceDto.html":{},"classes/TransferDto.html":{}}}],["maxlength(10",{"_index":225,"title":{},"body":{"classes/BalanceDto.html":{},"classes/TransferDto.html":{}}}],["metadata",{"_index":361,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BalanceController.html":{},"injectables/BalanceService.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["minlength",{"_index":222,"title":{},"body":{"classes/BalanceDto.html":{},"classes/TransferDto.html":{}}}],["minlength(10",{"_index":224,"title":{},"body":{"classes/BalanceDto.html":{},"classes/TransferDto.html":{}}}],["miscellaneous",{"_index":371,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":405,"title":{},"body":{"index.html":{}}}],["mode",{"_index":395,"title":{},"body":{"index.html":{}}}],["model",{"_index":90,"title":{},"body":{"classes/Balance.html":{},"classes/Transaction.html":{}}}],["models",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["models/balance.model",{"_index":163,"title":{},"body":{"controllers/BalanceController.html":{},"modules/BalanceModule.html":{},"injectables/BalanceService.html":{}}}],["models/transaction.model",{"_index":291,"title":{},"body":{"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/BalanceModule.html":{},"modules/TransactionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BalanceModule.html":{},"modules/TransactionModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/BalanceModule.html":{},"modules/TransactionModule.html":{},"modules.html":{},"overview.html":{}}}],["money",{"_index":186,"title":{},"body":{"controllers/BalanceController.html":{}}}],["more",{"_index":419,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":425,"title":{},"body":{"index.html":{}}}],["name",{"_index":128,"title":{},"body":{"controllers/BalanceController.html":{},"injectables/BalanceService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransactionService.html":{}}}],["nest",{"_index":384,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":429,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":263,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BalanceController.html":{},"modules/BalanceModule.html":{},"injectables/BalanceService.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":350,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":351,"title":{},"body":{"dependencies.html":{}}}],["nestjs/sequelize",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/BalanceModule.html":{},"injectables/BalanceService.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":167,"title":{},"body":{"controllers/BalanceController.html":{},"classes/BalanceDto.html":{},"controllers/TransactionController.html":{},"classes/TransferDto.html":{},"dependencies.html":{}}}],["new",{"_index":124,"title":{},"body":{"controllers/BalanceController.html":{},"classes/BalanceDto.html":{},"injectables/BalanceService.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["next",{"_index":258,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe",{"_index":272,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["node.js",{"_index":377,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":154,"title":{},"body":{"controllers/BalanceController.html":{},"injectables/BalanceService.html":{}}}],["notfoundexception(\"balance",{"_index":251,"title":{},"body":{"injectables/BalanceService.html":{}}}],["notfoundexception(\"invalid",{"_index":202,"title":{},"body":{"controllers/BalanceController.html":{}}}],["npm",{"_index":388,"title":{},"body":{"index.html":{}}}],["number",{"_index":96,"title":{},"body":{"classes/Balance.html":{},"classes/BalanceDto.html":{},"classes/Transaction.html":{},"classes/TransferDto.html":{}}}],["observable",{"_index":262,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["op",{"_index":311,"title":{},"body":{"injectables/TransactionService.html":{}}}],["op.gt",{"_index":316,"title":{},"body":{"injectables/TransactionService.html":{}}}],["open",{"_index":407,"title":{},"body":{"index.html":{}}}],["optional",{"_index":129,"title":{},"body":{"controllers/BalanceController.html":{},"injectables/BalanceService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransactionService.html":{}}}],["order",{"_index":319,"title":{},"body":{"injectables/TransactionService.html":{}}}],["out",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/BalanceModule.html":{},"modules/TransactionModule.html":{},"overview.html":{}}}],["overview",{"_index":434,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":347,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":155,"title":{},"body":{"controllers/BalanceController.html":{}}}],["parameters",{"_index":127,"title":{},"body":{"controllers/BalanceController.html":{},"injectables/BalanceService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransactionService.html":{}}}],["password",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["pg",{"_index":358,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":417,"title":{},"body":{"index.html":{}}}],["port",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":156,"title":{},"body":{"controllers/BalanceController.html":{},"controllers/TransactionController.html":{}}}],["post('create",{"_index":171,"title":{},"body":{"controllers/BalanceController.html":{}}}],["post('create')@apibody({type",{"_index":121,"title":{},"body":{"controllers/BalanceController.html":{}}}],["post('transfer",{"_index":175,"title":{},"body":{"controllers/BalanceController.html":{}}}],["post('transfer')@apibody({type",{"_index":140,"title":{},"body":{"controllers/BalanceController.html":{}}}],["prefix",{"_index":108,"title":{},"body":{"controllers/BalanceController.html":{},"controllers/TransactionController.html":{}}}],["primarykey",{"_index":101,"title":{},"body":{"classes/Balance.html":{},"classes/Transaction.html":{}}}],["primarykey()@autoincrement()@column",{"_index":284,"title":{},"body":{"classes/Transaction.html":{}}}],["private",{"_index":170,"title":{},"body":{"controllers/BalanceController.html":{},"injectables/BalanceService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["process.env.db_host",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_name",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_pass",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_user",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":397,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":376,"title":{},"body":{"index.html":{}}}],["project",{"_index":408,"title":{},"body":{"index.html":{}}}],["promise",{"_index":118,"title":{},"body":{"controllers/BalanceController.html":{},"injectables/BalanceService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["properties",{"_index":91,"title":{},"body":{"classes/Balance.html":{},"classes/BalanceDto.html":{},"classes/Transaction.html":{},"classes/TransferDto.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/BalanceModule.html":{},"modules/TransactionModule.html":{},"overview.html":{}}}],["read",{"_index":418,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["recipient",{"_index":204,"title":{},"body":{"controllers/BalanceController.html":{},"classes/TransferDto.html":{}}}],["reference",{"_index":180,"title":{},"body":{"controllers/BalanceController.html":{},"classes/Transaction.html":{}}}],["reflect",{"_index":360,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":386,"title":{},"body":{"index.html":{}}}],["requesttimeoutexception",{"_index":264,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["reset",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/BalanceModule.html":{},"modules/TransactionModule.html":{},"overview.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Balance.html":{},"controllers/BalanceController.html":{},"classes/BalanceDto.html":{},"modules/BalanceModule.html":{},"injectables/BalanceService.html":{},"injectables/TimeoutInterceptor.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/TransferDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Balance.html":{},"controllers/BalanceController.html":{},"classes/BalanceDto.html":{},"modules/BalanceModule.html":{},"injectables/BalanceService.html":{},"injectables/TimeoutInterceptor.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/TransferDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BalanceController.html":{},"injectables/BalanceService.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BalanceController.html":{},"injectables/BalanceService.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["rimraf",{"_index":363,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":392,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":267,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":270,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["scalable",{"_index":381,"title":{},"body":{"index.html":{}}}],["seconds",{"_index":193,"title":{},"body":{"controllers/BalanceController.html":{}}}],["self",{"_index":187,"title":{},"body":{"controllers/BalanceController.html":{}}}],["sender",{"_index":326,"title":{},"body":{"classes/TransferDto.html":{}}}],["senders",{"_index":203,"title":{},"body":{"controllers/BalanceController.html":{}}}],["sequelize",{"_index":104,"title":{},"body":{"classes/Balance.html":{},"controllers/BalanceController.html":{},"injectables/BalanceService.html":{},"classes/Transaction.html":{},"injectables/TransactionService.html":{},"dependencies.html":{}}}],["sequelizemodule",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/BalanceModule.html":{},"modules/TransactionModule.html":{}}}],["sequelizemodule.forfeature([balance",{"_index":232,"title":{},"body":{"modules/BalanceModule.html":{}}}],["sequelizemodule.forfeature([transaction",{"_index":300,"title":{},"body":{"modules/TransactionModule.html":{}}}],["sequelizemodule.forroot",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["server",{"_index":148,"title":{},"body":{"controllers/BalanceController.html":{},"index.html":{}}}],["side",{"_index":382,"title":{},"body":{"index.html":{}}}],["single",{"_index":133,"title":{},"body":{"controllers/BalanceController.html":{}}}],["singleaccount",{"_index":111,"title":{},"body":{"controllers/BalanceController.html":{}}}],["singleaccount(@param('account",{"_index":208,"title":{},"body":{"controllers/BalanceController.html":{}}}],["singleaccount(account",{"_index":131,"title":{},"body":{"controllers/BalanceController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Balance.html":{},"controllers/BalanceController.html":{},"classes/BalanceDto.html":{},"modules/BalanceModule.html":{},"injectables/BalanceService.html":{},"injectables/TimeoutInterceptor.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/TransferDto.html":{},"index.html":{}}}],["sponsors",{"_index":411,"title":{},"body":{"index.html":{}}}],["src/.../helper.ts",{"_index":438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":373,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":82,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":83,"title":{},"body":{"injectables/AppService.html":{}}}],["src/balance/balance.controller.ts",{"_index":107,"title":{},"body":{"controllers/BalanceController.html":{},"coverage.html":{}}}],["src/balance/balance.controller.ts:23",{"_index":126,"title":{},"body":{"controllers/BalanceController.html":{}}}],["src/balance/balance.controller.ts:33",{"_index":150,"title":{},"body":{"controllers/BalanceController.html":{}}}],["src/balance/balance.controller.ts:81",{"_index":117,"title":{},"body":{"controllers/BalanceController.html":{}}}],["src/balance/balance.controller.ts:88",{"_index":137,"title":{},"body":{"controllers/BalanceController.html":{}}}],["src/balance/balance.module.ts",{"_index":229,"title":{},"body":{"modules/BalanceModule.html":{}}}],["src/balance/balance.service.ts",{"_index":233,"title":{},"body":{"injectables/BalanceService.html":{},"coverage.html":{}}}],["src/balance/balance.service.ts:15",{"_index":242,"title":{},"body":{"injectables/BalanceService.html":{}}}],["src/balance/balance.service.ts:19",{"_index":244,"title":{},"body":{"injectables/BalanceService.html":{}}}],["src/balance/balance.service.ts:32",{"_index":240,"title":{},"body":{"injectables/BalanceService.html":{}}}],["src/balance/balance.service.ts:8",{"_index":237,"title":{},"body":{"injectables/BalanceService.html":{}}}],["src/balance/create",{"_index":210,"title":{},"body":{"classes/BalanceDto.html":{},"coverage.html":{}}}],["src/balance/models/balance.model.ts",{"_index":88,"title":{},"body":{"classes/Balance.html":{},"coverage.html":{}}}],["src/balance/models/balance.model.ts:10",{"_index":98,"title":{},"body":{"classes/Balance.html":{}}}],["src/balance/models/balance.model.ts:7",{"_index":95,"title":{},"body":{"classes/Balance.html":{}}}],["src/balance/transfer.dto.ts",{"_index":324,"title":{},"body":{"classes/TransferDto.html":{},"coverage.html":{}}}],["src/balance/transfer.dto.ts:14",{"_index":327,"title":{},"body":{"classes/TransferDto.html":{}}}],["src/balance/transfer.dto.ts:19",{"_index":325,"title":{},"body":{"classes/TransferDto.html":{}}}],["src/balance/transfer.dto.ts:8",{"_index":328,"title":{},"body":{"classes/TransferDto.html":{}}}],["src/helper",{"_index":160,"title":{},"body":{"controllers/BalanceController.html":{}}}],["src/helper.ts",{"_index":340,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":343,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/timeout.interceptor.ts",{"_index":254,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["src/timeout.interceptor.ts:7",{"_index":260,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["src/transaction/models/transaction.model.ts",{"_index":279,"title":{},"body":{"classes/Transaction.html":{},"coverage.html":{}}}],["src/transaction/models/transaction.model.ts:12",{"_index":287,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transaction/models/transaction.model.ts:15",{"_index":283,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transaction/models/transaction.model.ts:18",{"_index":282,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transaction/models/transaction.model.ts:8",{"_index":285,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transaction/transaction.controller.ts",{"_index":288,"title":{},"body":{"controllers/TransactionController.html":{},"coverage.html":{}}}],["src/transaction/transaction.controller.ts:14",{"_index":290,"title":{},"body":{"controllers/TransactionController.html":{}}}],["src/transaction/transaction.module",{"_index":230,"title":{},"body":{"modules/BalanceModule.html":{}}}],["src/transaction/transaction.module.ts",{"_index":298,"title":{},"body":{"modules/TransactionModule.html":{}}}],["src/transaction/transaction.service.ts",{"_index":301,"title":{},"body":{"injectables/TransactionService.html":{},"coverage.html":{}}}],["src/transaction/transaction.service.ts:13",{"_index":307,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/transaction/transaction.service.ts:17",{"_index":310,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/transaction/transaction.service.ts:25",{"_index":309,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/transaction/transaction.service.ts:41",{"_index":306,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/transaction/transaction.service.ts:7",{"_index":304,"title":{},"body":{"injectables/TransactionService.html":{}}}],["start",{"_index":393,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":396,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":398,"title":{},"body":{"index.html":{}}}],["started",{"_index":375,"title":{"index.html":{}},"body":{}}],["starter",{"_index":385,"title":{},"body":{"index.html":{}}}],["statements",{"_index":334,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":172,"title":{},"body":{"controllers/BalanceController.html":{},"controllers/TransactionController.html":{}}}],["stay",{"_index":421,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Balance.html":{},"controllers/BalanceController.html":{},"classes/BalanceDto.html":{},"injectables/BalanceService.html":{},"classes/Transaction.html":{},"injectables/TransactionService.html":{},"classes/TransferDto.html":{}}}],["support",{"_index":412,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":432,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":368,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["t",{"_index":197,"title":{},"body":{"controllers/BalanceController.html":{}}}],["table",{"_index":99,"title":{},"body":{"classes/Balance.html":{},"classes/Transaction.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":346,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":401,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":404,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":403,"title":{},"body":{"index.html":{}}}],["tests",{"_index":400,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":410,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.balancemodel.create(data",{"_index":252,"title":{},"body":{"injectables/BalanceService.html":{}}}],["this.balancemodel.findall",{"_index":248,"title":{},"body":{"injectables/BalanceService.html":{}}}],["this.balancemodel.findone",{"_index":249,"title":{},"body":{"injectables/BalanceService.html":{}}}],["this.balanceservice.create(body",{"_index":174,"title":{},"body":{"controllers/BalanceController.html":{}}}],["this.balanceservice.findall",{"_index":206,"title":{},"body":{"controllers/BalanceController.html":{}}}],["this.balanceservice.findone(account",{"_index":209,"title":{},"body":{"controllers/BalanceController.html":{}}}],["this.sequelize.transaction(async",{"_index":196,"title":{},"body":{"controllers/BalanceController.html":{}}}],["this.transactionmodel.create(data",{"_index":323,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.transactionmodel.findall",{"_index":313,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.transactionmodel.findone",{"_index":314,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.transactionservice.findall",{"_index":294,"title":{},"body":{"controllers/TransactionController.html":{}}}],["this.transactionservice.findlatest(transferdto.from",{"_index":190,"title":{},"body":{"controllers/BalanceController.html":{}}}],["throw",{"_index":183,"title":{},"body":{"controllers/BalanceController.html":{},"injectables/BalanceService.html":{},"injectables/TransactionService.html":{}}}],["throwerror",{"_index":265,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(err",{"_index":278,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(new",{"_index":277,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout",{"_index":269,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout(5000",{"_index":273,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouterror",{"_index":266,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":253,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["tobalance",{"_index":201,"title":{},"body":{"controllers/BalanceController.html":{}}}],["touch",{"_index":422,"title":{},"body":{"index.html":{}}}],["transaction",{"_index":194,"title":{"classes/Transaction.html":{}},"body":{"controllers/BalanceController.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["transaction.controller",{"_index":299,"title":{},"body":{"modules/TransactionModule.html":{}}}],["transaction.service",{"_index":292,"title":{},"body":{"controllers/TransactionController.html":{},"modules/TransactionModule.html":{}}}],["transaction/transaction.controller",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["transaction/transaction.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["transaction/transaction.service",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"controllers/BalanceController.html":{}}}],["transactioncontroller",{"_index":50,"title":{"controllers/TransactionController.html":{}},"body":{"modules/AppModule.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"coverage.html":{}}}],["transactionmodel",{"_index":305,"title":{},"body":{"injectables/TransactionService.html":{}}}],["transactionmodule",{"_index":42,"title":{"modules/TransactionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BalanceModule.html":{},"modules/TransactionModule.html":{},"modules.html":{},"overview.html":{}}}],["transactions",{"_index":289,"title":{},"body":{"controllers/TransactionController.html":{}}}],["transactionservice",{"_index":44,"title":{"injectables/TransactionService.html":{}},"body":{"modules/AppModule.html":{},"controllers/BalanceController.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"overview.html":{}}}],["transfer",{"_index":112,"title":{},"body":{"controllers/BalanceController.html":{},"classes/TransferDto.html":{}}}],["transfer(@body",{"_index":178,"title":{},"body":{"controllers/BalanceController.html":{}}}],["transfer(transferdto",{"_index":138,"title":{},"body":{"controllers/BalanceController.html":{}}}],["transfer.dto",{"_index":164,"title":{},"body":{"controllers/BalanceController.html":{}}}],["transferdto",{"_index":139,"title":{"classes/TransferDto.html":{}},"body":{"controllers/BalanceController.html":{},"classes/TransferDto.html":{},"coverage.html":{}}}],["transferdto.from",{"_index":182,"title":{},"body":{"controllers/BalanceController.html":{}}}],["transferdto.to",{"_index":181,"title":{},"body":{"controllers/BalanceController.html":{}}}],["transferdto})@apiresponse({status",{"_index":141,"title":{},"body":{"controllers/BalanceController.html":{}}}],["transformer",{"_index":355,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"controllers/BalanceController.html":{}}}],["try",{"_index":195,"title":{},"body":{"controllers/BalanceController.html":{},"injectables/TransactionService.html":{}}}],["twitter",{"_index":428,"title":{},"body":{"index.html":{}}}],["type",{"_index":93,"title":{},"body":{"classes/Balance.html":{},"controllers/BalanceController.html":{},"classes/BalanceDto.html":{},"injectables/BalanceService.html":{},"injectables/TimeoutInterceptor.html":{},"classes/Transaction.html":{},"injectables/TransactionService.html":{},"classes/TransferDto.html":{},"coverage.html":{}}}],["typeof",{"_index":247,"title":{},"body":{"injectables/BalanceService.html":{},"injectables/TransactionService.html":{}}}],["typescript",{"_index":105,"title":{},"body":{"classes/Balance.html":{},"classes/Transaction.html":{},"dependencies.html":{},"index.html":{}}}],["ui",{"_index":369,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":157,"title":{},"body":{"controllers/BalanceController.html":{}}}],["unique",{"_index":102,"title":{},"body":{"classes/Balance.html":{},"classes/Transaction.html":{}}}],["unique()@column",{"_index":286,"title":{},"body":{"classes/Transaction.html":{}}}],["unique(true",{"_index":106,"title":{},"body":{"classes/Balance.html":{}}}],["unique(undefined)@column",{"_index":94,"title":{},"body":{"classes/Balance.html":{}}}],["unit",{"_index":399,"title":{},"body":{"index.html":{}}}],["useinterceptors",{"_index":158,"title":{},"body":{"controllers/BalanceController.html":{}}}],["username",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":223,"title":{},"body":{"classes/BalanceDto.html":{},"classes/TransferDto.html":{},"dependencies.html":{}}}],["value",{"_index":440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":341,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":437,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["wait",{"_index":191,"title":{},"body":{"controllers/BalanceController.html":{}}}],["watch",{"_index":394,"title":{},"body":{"index.html":{}}}],["website",{"_index":426,"title":{},"body":{"index.html":{}}}],["world",{"_index":85,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":415,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/BalanceModule.html":{},"modules/TransactionModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nBalanceModule\n\nBalanceModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBalanceModule->AppModule\n\n\n\n\n\nTransactionModule\n\nTransactionModule\n\nAppModule -->\n\nTransactionModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nBalanceService\n\nBalanceService\n\nAppModule -->\n\nBalanceService->AppModule\n\n\n\n\n\nTransactionService\n\nTransactionService\n\nAppModule -->\n\nTransactionService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            BalanceService\n                        \n                        \n                            TransactionService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            BalanceController\n                        \n                        \n                            TransactionController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BalanceModule\n                        \n                        \n                            TransactionModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { BalanceController } from './balance/balance.controller';\nimport { BalanceModule } from './balance/balance.module';\nimport { BalanceService } from './balance/balance.service';\nimport { TransactionController } from './transaction/transaction.controller';\nimport { TransactionModule } from './transaction/transaction.module';\nimport { TransactionService } from './transaction/transaction.service';\n\n\n@Module({\n  imports: [\n    ConfigModule.forRoot(),\n    TransactionModule,\n    BalanceModule,\n    SequelizeModule.forRoot({\n      dialect:\"postgres\",\n      host: process.env.DB_HOST,\n      port: 5433,\n      username: process.env.DB_USER,\n      password: process.env.DB_PASS,\n      database: process.env.DB_NAME,\n      models: [],\n      autoLoadModels: true,\n      synchronize: true\n    }),\n  ],\n  controllers: [AppController, BalanceController, TransactionController],\n  providers: [AppService, BalanceService, TransactionService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Balance.html":{"url":"classes/Balance.html","title":"class - Balance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Balance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/balance/models/balance.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                balance\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            account\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Unique(undefined)@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/balance/models/balance.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            balance\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/balance/models/balance.model.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Model, Table, AutoIncrement, PrimaryKey, Unique, IsUUID } from 'sequelize-typescript';\n\n@Table\nexport class Balance extends Model {\n    @Unique(true)\n    @Column\n    account: string;\n\n    @Column\n    balance: number;\n    \n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BalanceController.html":{"url":"controllers/BalanceController.html","title":"controller - BalanceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BalanceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/balance/balance.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                balance\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                all\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                singleAccount\n                            \n                            \n                                    Async\n                                transfer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            all\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    all()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiResponse({status: 200, description: 'Get all balances'})\n                \n            \n\n            \n                \n                    Defined in src/balance/balance.controller.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(body: BalanceDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('create')@ApiBody({type: BalanceDto})@ApiResponse({status: 201, description: 'Create new account/balance'})\n                \n            \n\n            \n                \n                    Defined in src/balance/balance.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                BalanceDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            singleAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    singleAccount(account: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':account')@ApiResponse({status: 200, description: 'Get single account all balance'})@ApiResponse({status: 404, description: 'Balance not found'})\n                \n            \n\n            \n                \n                    Defined in src/balance/balance.controller.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transfer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transfer(transferDto: TransferDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('transfer')@ApiBody({type: TransferDto})@ApiResponse({status: 201, description: 'Transfer balance'})@ApiResponse({status: 404, description: 'Invalid Account'})@ApiResponse({status: 403, description: 'Insufficient fund'})@ApiResponse({status: 500, description: 'Server Error'})\n                \n            \n\n            \n                \n                    Defined in src/balance/balance.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transferDto\n                                    \n                                                TransferDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { BadRequestException, Body, Controller, Get, HttpException, InternalServerErrorException, NotFoundException, Param, Post, UnauthorizedException, UseInterceptors } from '@nestjs/common';\nimport { Sequelize } from 'sequelize';\nimport { generateReference } from 'src/helper';\nimport { TransactionService } from '../transaction/transaction.service';\nimport { BalanceDto } from './create-balance.dto';\nimport { BalanceService } from './balance.service';\nimport { Balance } from './models/balance.model';\nimport { TransferDto } from './transfer.dto';\nimport { ApiBody, ApiResponse } from '@nestjs/swagger';\n\n\n@Controller('balance')\nexport class BalanceController {\n    constructor(\n        private balanceService: BalanceService,\n        private transactionService: TransactionService,\n        private sequelize: Sequelize\n\n    ) { }\n    @Post('create')\n    @ApiBody({ type: BalanceDto })\n    @ApiResponse({ status: 201, description: \"Create new account/balance\" })\n    async create(@Body() body: BalanceDto) {\n        return this.balanceService.create(body);\n    }\n\n    @Post('transfer')\n    @ApiBody({type: TransferDto})\n    @ApiResponse({ status: 201, description: \"Transfer balance\" })\n    @ApiResponse({ status: 404, description: \"Invalid Account\" })\n    @ApiResponse({ status: 403, description: \"Insufficient fund\" })\n    @ApiResponse({ status: 500, description: \"Server Error\" })\n    async transfer(@Body() transferDto: TransferDto){\n        const reference = generateReference();\n        if (transferDto.to === transferDto.from) {\n            throw new BadRequestException(\"You can't transfer money to your self\")\n        }\n        const hasLatestTransaction = await this.transactionService.findLatest(transferDto.from);\n        if (hasLatestTransaction){\n            throw new BadRequestException(\"You have to wait for 30 seconds to do a new transaction\")\n        }\n        try {\n            await this.sequelize.transaction(async t => {\n                const fromBalance = await Balance.findOne({ where: { account: transferDto.from }, lock: true, transaction: t });\n                const toBalance = await Balance.findOne({ where: { account: transferDto.to }, lock: true, transaction: t });\n\n                if (!fromBalance) {\n                    throw new NotFoundException(\"Invalid senders account\")\n                }\n                if (!toBalance) {\n                    throw new NotFoundException(\"Invalid Recipient Account\")\n                }\n\n                if (fromBalance.balance  {\n        return this.balanceService.findAll();\n    }\n\n    @Get(':account')\n    @ApiResponse({ status: 200, description: \"Get single account all balance\" })\n    @ApiResponse({ status: 404, description: \"Balance not found\" })\n    async singleAccount(@Param('account') account: string): Promise {\n        return this.balanceService.findOne(account);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BalanceDto.html":{"url":"classes/BalanceDto.html","title":"class - BalanceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BalanceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/balance/create-balance.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                balance\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            account\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@MinLength(10)@MaxLength(10)@ApiProperty({type: String, description: 'New Account'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/balance/create-balance.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            balance\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsPositive()@ApiProperty({type: Number, description: 'Balance'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/balance/create-balance.dto.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsInt, IsNumber, IsPositive, MaxLength, MinLength } from 'class-validator';\nexport class BalanceDto {\n    @IsNotEmpty()\n    @MinLength(10)\n    @MaxLength(10)\n    @ApiProperty({ type: String, description: \"New Account\" })\n    account: string;\n\n    @IsNotEmpty()\n    @IsPositive()\n    @ApiProperty({ type: Number, description: \"Balance\" })\n    balance: Number;\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BalanceModule.html":{"url":"modules/BalanceModule.html","title":"module - BalanceModule","body":"\n                   \n\n\n\n\n    Modules\n    BalanceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BalanceModule\n\n\n\ncluster_BalanceModule_imports\n\n\n\ncluster_BalanceModule_providers\n\n\n\n\nTransactionModule\n\nTransactionModule\n\n\n\nBalanceModule\n\nBalanceModule\n\nBalanceModule -->\n\nTransactionModule->BalanceModule\n\n\n\n\n\nBalanceService\n\nBalanceService\n\nBalanceModule -->\n\nBalanceService->BalanceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/balance/balance.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BalanceService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BalanceController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TransactionModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { TransactionModule } from 'src/transaction/transaction.module';\nimport { BalanceController } from './balance.controller';\nimport { BalanceService } from './balance.service';\nimport { Balance } from './models/balance.model';\n\n@Module({\n    imports: [SequelizeModule.forFeature([Balance]), TransactionModule],\n    providers: [BalanceService],\n    controllers: [BalanceController],\n    exports: [SequelizeModule]\n})\nexport class BalanceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BalanceService.html":{"url":"injectables/BalanceService.html","title":"injectable - BalanceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BalanceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/balance/balance.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(balanceModel, sequelize: Sequelize)\n                    \n                \n                        \n                            \n                                Defined in src/balance/balance.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        balanceModel\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sequelize\n                                                  \n                                                        \n                                                                    Sequelize\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data)\n                \n            \n\n\n            \n                \n                    Defined in src/balance/balance.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/balance/balance.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(account: string)\n                \n            \n\n\n            \n                \n                    Defined in src/balance/balance.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, InternalServerErrorException, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { Sequelize } from 'sequelize';\nimport { BalanceDto } from './create-balance.dto';\nimport { Balance } from './models/balance.model';\n\n@Injectable()\nexport class BalanceService {\n    constructor(\n        @InjectModel(Balance)\n        private balanceModel: typeof Balance,\n        private sequelize: Sequelize\n    ) { }\n\n    async findAll(): Promise {\n        return this.balanceModel.findAll();\n    }\n\n    async findOne(account: string): Promise {\n        const balance = await this.balanceModel.findOne({\n            where: {\n                account\n            },\n        });\n        if(!balance){\n            throw new NotFoundException(\"Balance not found\")\n        }\n\n        return balance;\n    }\n\n    async create(data): Promise {\n        return this.balanceModel.create(data);\n    }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/timeout.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/timeout.interceptor.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler, RequestTimeoutException } from '@nestjs/common';\nimport { Observable, throwError, TimeoutError } from 'rxjs';\nimport { catchError, timeout } from 'rxjs/operators';\n\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next.handle().pipe(\n      timeout(5000),\n      catchError(err => {\n        if (err instanceof TimeoutError) {\n          return throwError(new RequestTimeoutException());\n        }\n        return throwError(err);\n      }),\n    );\n  };\n};\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Transaction.html":{"url":"classes/Transaction.html","title":"class - Transaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Transaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transaction/models/transaction.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                amount\n                            \n                            \n                                id\n                            \n                            \n                                reference\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            account\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/transaction/models/transaction.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            amount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/transaction/models/transaction.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()@AutoIncrement()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/transaction/models/transaction.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reference\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Unique()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/transaction/models/transaction.model.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Model, Table, AutoIncrement, PrimaryKey, Unique } from 'sequelize-typescript';\n\n@Table\nexport class Transaction extends Model {\n    @PrimaryKey\n    @AutoIncrement\n    @Column\n    id: number;\n\n    @Unique\n    @Column\n    reference: string;\n\n    @Column\n    amount: number;\n\n    @Column\n    account: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TransactionController.html":{"url":"controllers/TransactionController.html","title":"controller - TransactionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TransactionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transaction/transaction.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                transactions\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                all\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            all\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    all()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiResponse({status: 200, description: 'Get all Transactions'})\n                \n            \n\n            \n                \n                    Defined in src/transaction/transaction.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post } from '@nestjs/common';\nimport { ApiResponse } from '@nestjs/swagger';\nimport { Transaction } from './models/transaction.model';\nimport { TransactionService } from './transaction.service';\n\n@Controller('transactions')\nexport class TransactionController {\n    constructor(\n        private transactionService: TransactionService,\n       \n    ) { }\n    @Get()\n    @ApiResponse({ status: 200, description: \"Get all Transactions\" })\n    async all(): Promise {\n        return this.transactionService.findAll();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionModule.html":{"url":"modules/TransactionModule.html","title":"module - TransactionModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TransactionModule\n\n\n\ncluster_TransactionModule_providers\n\n\n\ncluster_TransactionModule_exports\n\n\n\n\nTransactionService \n\nTransactionService \n\n\n\nTransactionModule\n\nTransactionModule\n\nTransactionService  -->\n\nTransactionModule->TransactionService \n\n\n\n\n\nTransactionService\n\nTransactionService\n\nTransactionModule -->\n\nTransactionService->TransactionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/transaction/transaction.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TransactionService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TransactionController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TransactionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { Transaction } from './models/transaction.model';\nimport { TransactionController } from './transaction.controller';\nimport { TransactionService } from './transaction.service';\n\n@Module({\n    imports: [SequelizeModule.forFeature([Transaction])],\n    providers: [TransactionService],\n    controllers: [TransactionController],\n    exports: [SequelizeModule, TransactionService]\n})\nexport class TransactionModule {}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransactionService.html":{"url":"injectables/TransactionService.html","title":"injectable - TransactionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TransactionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transaction/transaction.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findLatest\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(transactionModel)\n                    \n                \n                        \n                            \n                                Defined in src/transaction/transaction.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transactionModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data)\n                \n            \n\n\n            \n                \n                    Defined in src/transaction/transaction.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/transaction/transaction.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findLatest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findLatest(account: string)\n                \n            \n\n\n            \n                \n                    Defined in src/transaction/transaction.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(account: string)\n                \n            \n\n\n            \n                \n                    Defined in src/transaction/transaction.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, InternalServerErrorException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { Op } from 'sequelize';\nimport { Transaction } from './models/transaction.model';\n\n@Injectable()\nexport class TransactionService {\n    constructor(\n        @InjectModel(Transaction)\n        private transactionModel: typeof Transaction,\n    ) { }\n\n    async findAll(): Promise {\n        return this.transactionModel.findAll();\n    }\n\n    async findOne(account: string): Promise {\n        return this.transactionModel.findOne({\n            where: {\n                account\n            },\n        });\n    }\n\n    async findLatest(account: string): Promise{\n        try {\n            return this.transactionModel.findOne({\n                where: {\n                    account,\n                    createdAt: {\n                        [Op.gt]: new Date(Date.now() - (30 * 1000)),\n                    },\n                },\n                order: [['createdAt', 'DESC']]\n            });\n        } catch (error) {\n            throw new InternalServerErrorException(\"Server error\");\n        }\n    }\n\n    async create(data): Promise {\n        return this.transactionModel.create(data);\n    }\n\n   \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransferDto.html":{"url":"classes/TransferDto.html","title":"class - TransferDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransferDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/balance/transfer.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                from\n                            \n                            \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            amount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsPositive()@ApiProperty({type: Number, description: 'Transfer Amount'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/balance/transfer.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            from\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@MinLength(10)@MaxLength(10)@ApiProperty({type: String, description: 'Sender Account'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/balance/transfer.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            to\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@MinLength(10)@MaxLength(10)@ApiProperty({type: String, description: 'Recipient Account'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/balance/transfer.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsInt, IsNumber, IsPositive, MaxLength, MinLength } from 'class-validator';\nexport class TransferDto {\n    @IsNotEmpty()\n    @MinLength(10)\n    @MaxLength(10)\n    @ApiProperty({type: String, description:\"Recipient Account\"})\n    to: string;\n\n    @IsNotEmpty()\n    @MinLength(10)\n    @MaxLength(10)\n    @ApiProperty({ type: String, description: \"Sender Account\" })\n    from: string;\n\n    @IsNotEmpty()\n    @IsPositive()\n    @ApiProperty({ type: Number, description: \"Transfer Amount\" })\n    amount: number;\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/balance/balance.controller.ts\n            \n            controller\n            BalanceController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/balance/balance.service.ts\n            \n            injectable\n            BalanceService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/balance/create-balance.dto.ts\n            \n            class\n            BalanceDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/balance/models/balance.model.ts\n            \n            class\n            Balance\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/balance/transfer.dto.ts\n            \n            class\n            TransferDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/helper.ts\n            \n            variable\n            generateReference\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/timeout.interceptor.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/transaction/models/transaction.model.ts\n            \n            class\n            Transaction\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/transaction/transaction.controller.ts\n            \n            controller\n            TransactionController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/transaction/transaction.service.ts\n            \n            injectable\n            TransactionService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/config : ^0.6.3\n        \n            @nestjs/core : ^7.6.15\n        \n            @nestjs/platform-express : ^7.6.15\n        \n            @nestjs/sequelize : ^0.2.0\n        \n            @nestjs/swagger : ^4.8.0\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            pg : ^8.5.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n        \n            sequelize : ^6.6.2\n        \n            sequelize-typescript : ^2.1.0\n        \n            swagger-ui-express : ^4.1.6\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BalanceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_TransactionModule\n\n\n\ncluster_TransactionModule_exports\n\n\n\n\nBalanceModule\n\nBalanceModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBalanceModule->AppModule\n\n\n\n\n\nTransactionModule\n\nTransactionModule\n\nBalanceModule -->\n\nTransactionModule->BalanceModule\n\n\n\nAppModule -->\n\nTransactionModule->AppModule\n\n\n\n\n\nTransactionService \n\nTransactionService \n\nTransactionService  -->\n\nTransactionModule->TransactionService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nBalanceService\n\nBalanceService\n\nBalanceModule -->\n\nBalanceService->BalanceModule\n\n\n\nAppModule -->\n\nBalanceService->AppModule\n\n\n\n\n\nTransactionService\n\nTransactionService\n\nTransactionModule -->\n\nTransactionService->TransactionModule\n\n\n\nAppModule -->\n\nTransactionService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            generateReference   (src/.../helper.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/helper.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            generateReference\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (length = 10) => {\n    let alpha = 'ABCDEFGHIJKLMNOPQRSTUPWXYZ0123456789'.split('');\n    let code = '';\n    for (let i = 0; i \n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
